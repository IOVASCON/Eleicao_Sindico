# Define o tipo de banco de dados como H2, um banco de dados em memória popular para desenvolvimento e testes.
quarkus.datasource.db-kind=h2

# URL de conexão JDBC para o banco de dados H2. 'mem:test' cria um banco de dados em memória com o nome 'test'. 
# 'DB_CLOSE_DELAY=-1' garante que o banco de dados em memória não seja fechado quando a última conexão for fechada.
quarkus.datasource.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1

# Define o driver JDBC a ser usado para o banco de dados H2.
quarkus.datasource.jdbc.driver=org.h2.Driver

# Nome de usuário para conectar-se ao banco de dados. 'sa' é o padrão para o H2.
quarkus.datasource.username=sa

# Senha para conectar-se ao banco de dados. 'sa' é o padrão para o H2.
quarkus.datasource.password=sa

# Configuração do Hibernate ORM para gerar automaticamente o esquema do banco de dados.
# 'drop-and-create' significa que o esquema será descartado e recriado cada vez que o aplicativo for iniciado.
# Útil para desenvolvimento e testes, mas deve ser usado com cuidado em produção.
quarkus.hibernate-orm.database.generation=drop-and-create
